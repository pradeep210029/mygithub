class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
        map<int,bool>vis;
       map<int,int>prnt;
        
        queue<int>q;
        
        for(int i=0;i<V;i++)
        {
            if(vis[i]!=true){
        q.push(i);
        vis[i]=true;
        prnt[i]=i;
        }
        while(!q.empty())
        {
            int data=q.front();
            q.pop();
            for(auto j:adj[data])
            {
                if(vis[j]!=true)
                {
                    q.push(j);
                    vis[j]=true;
                    prnt[j]=data;
                }
                else if(vis[j]==true && prnt[data]!=j)
                {
                    return true;
                }
                
            }
        }
        }
        return false;
    }
};
